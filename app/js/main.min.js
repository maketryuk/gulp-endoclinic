"use strict";function _createForOfIteratorHelper(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,s=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return i=e.done,e},e:function(e){s=!0,r=e},f:function(){try{i||null==o.return||o.return()}finally{if(s)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(o="Object"===o&&e.constructor?e.constructor.name:o)||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}window.onbeforeunload=function(){window.scrollTo(0,0)};var slideUp=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=e.offsetHeight+"px",e.offsetHeight,e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,window.setTimeout(function(){e.style.display="none",e.style.removeProperty("height"),e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideDown=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;e.style.removeProperty("display");var o=window.getComputedStyle(e).display;e.style.display=o="none"===o?"block":o;o=e.offsetHeight;e.style.overflow="hidden",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0,e.style.marginTop=0,e.style.marginBottom=0,e.offsetHeight,e.style.transitionProperty="height, margin, padding",e.style.transitionDuration=t+"ms",e.style.height=o+"px",e.style.removeProperty("padding-top"),e.style.removeProperty("padding-bottom"),e.style.removeProperty("margin-top"),e.style.removeProperty("margin-bottom"),window.setTimeout(function(){e.style.removeProperty("height"),e.style.removeProperty("overflow"),e.style.removeProperty("transition-duration"),e.style.removeProperty("transition-property")},t)},slideToggle=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:500;return("none"===window.getComputedStyle(e).display?slideDown:slideUp)(e,t)};window.onload=function(){var e,i=document.querySelector(".burger"),s=document.querySelector(".header"),l=document.querySelectorAll(".technology-card"),t=(document.querySelectorAll(".technology-card__body"),document.querySelectorAll(".tabs__item")),o=document.querySelectorAll(".tabs__trigger"),n=document.querySelector(".treatments .dropdown__trigger .dropdown__trigger-text"),a=document.querySelector(".treatments .dropdown"),c=document.querySelector(".treatments .dropdown__list"),r=_createForOfIteratorHelper(document.querySelectorAll(".header-contacts__link"));try{for(r.s();!(e=r.n()).done;)e.value.addEventListener("click",d)}catch(e){r.e(e)}finally{r.f()}function d(e){e.preventDefault();e=this.getAttribute("href"),e=document.querySelector(e).offsetTop;scroll({top:e-100,behavior:"smooth"})}window.addEventListener("scroll",function(){1<=$(window).scrollTop()?(s.classList.add("js-scroll-down"),s.classList.remove("js-scroll-top")):(s.classList.add("js-scroll-top"),s.classList.remove("js-scroll-down","js-nav-open","js-nav-close"))});for(var p=0;p<o.length;p++)!function(e){o[e].addEventListener("click",function(){t.forEach(function(e){e.classList.remove("js-active")}),o.forEach(function(e){e.classList.remove("js-active")}),t[e].classList.add("js-active"),o[e].classList.add("js-active"),n.textContent=document.querySelector(".tabs__trigger.js-active").textContent})}(p);n&&(n.textContent=document.querySelector(".tabs__trigger.js-active").textContent),OverlayScrollbars(document.querySelectorAll(".tooth"),{});var u,y,v,f=document.getElementById("file"),g=document.querySelector(".files__table");f&&f.addEventListener("change",function(){!function(){for(var e="",t=0;t<f.files.length;++t)e+='<div class="files__wrapper"><div class="files-item"><i class="icon-file"></i><span class="files-item__name">'+f.files.item(t).name+'</span/><i class="files-item__remove icon-trash-can" onclick="return this.parentNode.parentNode.remove();"></i></div></div>';0<=(g.innerHTML=e).length?g.style.display="flex":g.style.display="none"}()}),window.matchMedia("(min-width: 992px)").matches?(i.addEventListener("click",function(){s.classList.contains("js-nav-open")?(s.classList.remove("js-nav-open"),s.classList.add("js-nav-close")):(s.classList.add("js-nav-open"),s.classList.remove("js-nav-close"))}),$(".technology__wrapper").click(function(){$(".technology__wrapper").not($(this).closest(".technology__wrapper")).removeClass("js-active"),$(this).closest(".technology__wrapper").addClass("js-active"),$(this).hasClass("js-active")&&($(".technology-card__body").not($(this).find(".technology-card__body")).slideUp(300),$(this).find(".technology-card__body").slideDown(300))}),document.querySelector(".horizontal-scroll")&&(gsap.registerPlugin(ScrollTrigger),u=gsap.utils.toArray(".horizontal-scroll"),y=0,(v=function(){y=0,u.forEach(function(e){y+=e.offsetWidth})})(),ScrollTrigger.addEventListener("refreshInit",v),v=document.querySelector(".treatments"),gsap.to(u,{x:function(){return"-".concat(y-window.innerWidth)},ease:"none",scrollTrigger:{start:"-120px top",trigger:v,pin:!0,scrub:!0,end:function(){return"+=".concat(y)},invalidateOnRefresh:!0}}),u.forEach(function(e,t){ScrollTrigger.create({trigger:e,start:function(){return"top top-="+(e.offsetLeft-window.innerWidth/2)*(y/(y-window.innerWidth))},end:function(){return"+="+e.offsetWidth*(y/(y-window.innerWidth))},toggleClass:{targets:e,className:"active"}})}))):function(){for(var e,t=document.querySelectorAll(".show__trigger"),o=document.querySelectorAll(".show__item"),n=0;n<t.length;n++)!function(e){t[e].addEventListener("click",function(){t[e].classList.toggle("js-active"),t[e].classList.contains("js-active")?(t[e].textContent="See less",o.forEach(function(e){e.style.display="block"})):(t[e].textContent="See all",o.forEach(function(e){e.style.display="none"}))})}(n);a&&c&&(e=document.querySelector(".dropdown__list").offsetHeight,document.documentElement.style.setProperty("--treatments-dropdown-offset",e+"px"),window.addEventListener("scroll",function(){window.scrollY>e+64?(a.classList.add("js-scroll-down"),c.style.display="none",document.querySelector(".treatments").classList.add("offset-top")):(a.classList.remove("js-scroll-down"),c.style.display="block",document.querySelector(".treatments").classList.remove("offset-top"))}),a.addEventListener("click",function(){a.classList.contains("js-scroll-down")&&slideToggle(c,300)})),i.addEventListener("click",function(){s.classList.toggle("js-nav-open"),document.body.classList.toggle("js-lock")});for(var r=0;r<l.length;r++)!function(e){l[e].addEventListener("click",function(){l.forEach(function(e){e.classList.remove("js-active")}),l[e].classList.add("js-active")})}(r);new Swiper(".treatments-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".treatments-button-next",prevEl:".treatments-button-prev"},pagination:{el:".treatments-pagination"},breakpoints:{768:{slidesPerView:2}}})}();new Swiper(".practices-slider",{slidesPerView:1,spaceBetween:40,navigation:{nextEl:".practices-button-next",prevEl:".practices-button-prev"},pagination:{el:".practices-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".testimonials-slider",{slidesPerView:1,spaceBetween:30,loop:!0,navigation:{nextEl:".testimonials-button-next",prevEl:".testimonials-button-prev"},pagination:{el:".testimonials-pagination"},breakpoints:{768:{slidesPerView:2},992:{slidesPerView:"auto",centeredSlides:!0}}}),new Swiper(".cases-slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".cases-button-next",prevEl:".cases-button-prev"},pagination:{el:".cases-pagination"},breakpoints:{768:{slidesPerView:2}}}),new Swiper(".socials__slider",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".socials-button-next",prevEl:".socials-button-prev"},pagination:{el:".socials-pagination"},breakpoints:{768:{slidesPerView:2}}})};var textarea=document.querySelector("textarea");function autosizeTextarea(){var e=this;setTimeout(function(){e.style.cssText="height:auto; padding:0",e.style.cssText="-moz-box-sizing:content-box",e.style.cssText="height:"+e.scrollHeight+"px"},0)}textarea&&textarea.addEventListener("keydown",autosizeTextarea),$("select").each(function(){var t=$(this),e=$(this).children("option").length;t.addClass("select__hidden"),t.wrap('<div class="select"></div>'),t.after('<div class="select__styled"></div>');var o=t.next("div.select__styled");o.append('<span></span><i class="icon-arrow-dropdown"></i>'),o.find("span").text(t.children("option").eq(0).text());for(var n=$("<ul />",{class:"select__options"}).insertAfter(o),r=0;r<e;r++)$("<li />",{text:t.children("option").eq(r).text(),rel:t.children("option").eq(r).val()}).appendTo(n);var i=n.children("li");o.click(function(e){e.stopPropagation(),$("div.select__styled.active").not(this).each(function(){$(this).removeClass("active").next("ul.select__options").slideUp(300)}),$(this).toggleClass("active").next("ul.select__options").slideToggle(300)}),i.click(function(e){e.stopPropagation(),o.find("span").text($(this).text()).removeClass("active"),t.val($(this).attr("rel")),n.slideUp(300)}),$(document).click(function(){o.removeClass("active"),n.slideUp(300)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,