// window.onbeforeunload = function () {
//   window.scrollTo(0, 0);
// }
"use strict";
"use strict";
"use strict";

var scrollChange = 1;
$(window).scroll(function () {
  var scroll = $(window).scrollTop();

  if (scroll >= scrollChange) {
    $('.header').addClass('js-scroll-down');
    $('.header').removeClass('js-scroll-top');
  } else {
    $('.header').removeClass('js-scroll-down').removeClass('js-nav-open').removeClass('js-nav-close');
    $('.header').addClass('js-scroll-top');
  }
}); // Media 992 =====>

if (window.matchMedia("(min-width: 992px)").matches) {
  $('.burger').click(function () {
    if ($('.header').hasClass('js-nav-open')) {
      $('.header').removeClass('js-nav-open');
      $('.header').addClass('js-nav-close');
    } else {
      $('.header').addClass('js-nav-open');
      $('.header').removeClass('js-nav-close');
    }
  });
} else {
  $('.burger').click(function () {
    $('.header').toggleClass('js-nav-open');
    $('body').toggleClass('js-lock');
  });
}
"use strict";
"use strict";

// Auto size textarea =====>
var textarea = document.querySelector('textarea');
textarea.addEventListener('keydown', autosizeTextarea);

function autosizeTextarea() {
  var el = this;
  setTimeout(function () {
    el.style.cssText = 'height:auto; padding:0'; // for box-sizing other than "content-box" use:

    el.style.cssText = '-moz-box-sizing:content-box';
    el.style.cssText = 'height:' + el.scrollHeight + 'px';
  }, 0);
} // Custom select =====>


$('select').each(function () {
  var $this = $(this),
      numberOfOptions = $(this).children('option').length;
  $this.addClass('select__hidden');
  $this.wrap('<div class="select"></div>');
  $this.after('<div class="select__styled"></div>');
  var $styledSelect = $this.next('div.select__styled');
  $styledSelect.text($this.children('option').eq(0).text());
  $styledSelect.append('<i class="icon-arrow-dropdown"></i>');
  var $list = $('<ul />', {
    'class': 'select__options'
  }).insertAfter($styledSelect);

  for (var i = 0; i < numberOfOptions; i++) {
    $('<li />', {
      text: $this.children('option').eq(i).text(),
      rel: $this.children('option').eq(i).val()
    }).appendTo($list);
  }

  var $listItems = $list.children('li');
  $styledSelect.click(function (e) {
    e.stopPropagation();
    $('div.select__styled.active').not(this).each(function () {
      $(this).removeClass('active').next('ul.select__options').slideUp(300);
    });
    $(this).toggleClass('active').next('ul.select__options').slideToggle(300);
  });
  $listItems.click(function (e) {
    e.stopPropagation();
    $styledSelect.text($(this).text()).removeClass('active');
    $this.val($(this).attr('rel'));
    $list.slideUp(300);
  });
  $(document).click(function () {
    $styledSelect.removeClass('active');
    $list.slideUp(300);
  });
});
"use strict";
"use strict";

var sliderPractices = new Swiper('.practices-slider', {
  slidesPerView: 1,
  spaceBetween: 30,
  navigation: {
    nextEl: ".practices-button-next",
    prevEl: ".practices-button-prev"
  },
  pagination: {
    el: ".practices-pagination"
  },
  breakpoints: {
    768: {
      slidesPerView: 2
    }
  }
});
"use strict";

// Media 992 =====>
if (window.matchMedia("(min-width: 992px)").matches) {
  $('.technology-card').click(function () {
    $('.technology-card__body').not($(this).find('.technology-card__body')).slideUp(300);
    $(this).find('.technology-card__body').slideDown(300);
    $(".technology-card").not($(this).closest(".technology-card")).removeClass("js-active");
    $(this).closest(".technology-card").addClass("js-active");
  });
} else {
  $('.technology-card').removeClass('js-active'); // $('.technology-card__body').css('display', 'none')

  $('.technology-card').click(function () {
    $(this).toggleClass('js-active');
    $('.technology-card').not($(this)).removeClass('js-active');
  });
}
"use strict";

var sliderTestimonials = new Swiper('.testimonials-slider', {
  slidesPerView: 1,
  spaceBetween: 30,
  loop: true,
  navigation: {
    nextEl: ".testimonials-button-next",
    prevEl: ".testimonials-button-prev"
  },
  pagination: {
    el: ".testimonials-pagination"
  },
  breakpoints: {
    768: {
      slidesPerView: 2
    },
    992: {
      slidesPerView: 'auto',
      centeredSlides: true
    }
  }
});
"use strict";

// Media 992 =====>
if (window.matchMedia("(min-width: 992px)").matches) {
  // Horizontal scroll in Treatments =====>
  gsap.registerPlugin(ScrollTrigger);
  var sections = gsap.utils.toArray(".treatments-wrapper");
  var maxWidth = 0;

  var getMaxWidth = function getMaxWidth() {
    maxWidth = 0;
    sections.forEach(function (section) {
      maxWidth += section.offsetWidth;
    });
  };

  getMaxWidth();
  ScrollTrigger.addEventListener("refreshInit", getMaxWidth);
  gsap.to(sections, {
    x: function x() {
      return "-".concat(maxWidth - window.innerWidth);
    },
    ease: "none",
    scrollTrigger: {
      trigger: ".treatments",
      pin: true,
      scrub: true,
      end: function end() {
        return "+=".concat(maxWidth);
      },
      invalidateOnRefresh: true
    }
  });
  sections.forEach(function (sct, i) {
    ScrollTrigger.create({
      trigger: sct,
      start: function start() {
        return 'top top-=' + (sct.offsetLeft - window.innerWidth / 2) * (maxWidth / (maxWidth - window.innerWidth));
      },
      end: function end() {
        return '+=' + sct.offsetWidth * (maxWidth / (maxWidth - window.innerWidth));
      },
      toggleClass: {
        targets: sct,
        className: "active"
      }
    });
  }); // About labels =====>

  gsap.to(".about-label-table", {
    yPercent: -200,
    ease: "none",
    scrollTrigger: {
      trigger: ".about-label-table",
      // start: "top bottom", // the default values
      // end: "bottom top",
      scrub: true
    }
  });
} else {
  var sliderTreatments = new Swiper('.treatments-slider', {
    slidesPerView: 1,
    spaceBetween: 30,
    navigation: {
      nextEl: ".treatments-button-next",
      prevEl: ".treatments-button-prev"
    },
    pagination: {
      el: ".treatments-pagination"
    },
    breakpoints: {
      768: {
        slidesPerView: 2
      }
    }
  });
}
"use strict";
"use strict";

var sliderCases = new Swiper('.cases-slider', {
  slidesPerView: 1,
  spaceBetween: 30,
  navigation: {
    nextEl: ".cases-button-next",
    prevEl: ".cases-button-prev"
  },
  pagination: {
    el: ".cases-pagination"
  },
  breakpoints: {
    768: {
      slidesPerView: 2
    }
  }
});
"use strict";
"use strict";
"use strict";
"use strict";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,